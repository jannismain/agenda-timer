# Python packaging & distribution
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "smart-agenda"
version = "0.0.1"
description = "Keep track of your agenda and passed time during meetings."
authors = ["Jannis Mainczyk <jmainczyk@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.8"
click = "^8.1.3"
pick = "^1.4.0"
rich = "^12.5.1"

[tool.poetry.dev-dependencies]
black = "^22.6.0"
isort = "^5.10.1"
flake8 = "^5.0.4"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"

[tool.poetry.scripts]
smart-agenda = "smart_agenda.cli:cli"

[tool.poetry.extras]
gui = ["pyside6"]

# https://docs.pytest.org/customize.html
[tool.pytest.ini_options]
log_cli = false
log_cli_level = "INFO"
# to log full filepath + line, use (%(pathname)s:%(lineno)d)
log_format = "%(asctime)s.%(msecs)03d  %(filename)20s:%(lineno)d  %(levelname)8s  %(message)s"
norecursedirs = [".*", "build", "env", "*.egg", ".nox"]
testpaths = ["tests", "src"]
# also run doctests with test suite
addopts = "--doctest-modules --doctest-continue-on-failure"
# strip u'' and b'' from output strings in py2, to make py2 test output the same as py3
doctest_optionflags = "ALLOW_UNICODE ALLOW_BYTES IGNORE_EXCEPTION_DETAIL"
markers = ["e2e: end-to-end test"]

[tool.coverage.run]
branch = true
source = ["src"]
command_line = "-m pytest --cov --cov-config=pyproject.toml --cov-branch --cov-report term --cov-report html:build/coverage"
omit = ["**/gui.py", "**/__main__.py"]

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "# nocov",
    "uvicorn\\.run",
    "if __name__ == .__main__.",
]

[tool.black]
line-length = 120
target-version = ["py38"]
include = '\.pyi?$'
extend_exclude = 'ext'

# https://github.com/timothycrosley/isort
[tool.isort]
profile = "black"
py_version = 39
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true
line_length = 120
default_section = "THIRDPARTY"
known_first_party = ["atria", "custom_components"]
